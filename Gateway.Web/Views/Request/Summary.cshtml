@using Gateway.Web.Database
@using Gateway.Web.Models
@using Gateway.Web.Models.Controller
@using Gateway.Web.Models.Request
@using Gateway.Web.Utils
@using Newtonsoft.Json
@using Version = Gateway.Web.Models.Controller.Version
@model Summary
@{
    Layout = "~/Views/Shared/_Layout.NoFooter.cshtml";
    ViewBag.Title = "Request";
    ViewBag.CustomTitle = Model.StartUtc.ToString("dd MMM yyyy")+ " - " +  Model.Controller ;
    ViewBag.Current = "Summary";
    var title = (string)Model.ParentCorrelationId.ToString();
}
@{ Html.RenderPartial("_RequestNav", (Summary)@Model); }

<style>
    .rowError {
        background-color:tomato
    }

    table.table.table-striped tr.found td {
    background-color:tomato;
}
</style>
    
<div id="page-content-wrapper">
    <div class="hero-unit">

        <h3 class="text-lowercase">Summary</h3>

        <table style="width: 100%; white-space: nowrap" class="datatable">
            <tr>
                <td class="columnheader" style="width: 10%">Controller</td>
                <td style="width: 40%">
                    <a href="~/Controller/History/@Model.Controller" class="hoverlink">@Model.Controller</a>
                </td>
                <td class="columnheader" style="width: 10%">Version</td>
                <td style="width: 40%">@Model.Version</td>
            </tr>
            <tr>
                <td class="columnheader">Start Utc</td>
                <td>@Model.StartUtc</td>
                <td class="columnheader">End Utc</td>
                <td>
                    @if (!Model.IsBusy)
                    {
                        @Model.EndUtc
                    }
                </td>
            </tr>
            <tr>
                <td class="columnheader">Queue Time</td>
                <td>@Model.QueueTimeFormatted</td>
                <td class="columnheader">Time Taken</td>
                <td>@Model.TimeTakenFormatted</td>
            </tr>
            <tr>
                <td class="columnheader">User</td>
                <td>@Model.User</td>
                <td class="columnheader">Ip Address</td>
                <td>@Model.IpAddress</td>
            </tr>
            <tr>
                <td class="columnheader">Correlation Id</td>
                <td style="        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
">
                    @Model.CorrelationId
                    @if (Model.CorrelationId != Guid.Empty)
                    {
                        <a href="~/Request/DeepDive?id=@Model.CorrelationId&controllername=@Model.Controller">
                            <span class="glyphicon glyphicon-eye-open" title="Eye of Sauron"></span>
                        </a>
                    }
                </td>
                <td class="columnheader">Parent Correlation Id</td>
                <td style="max-width: 200px; overflow: hidden; text-overflow: ellipsis;">
                    @if (Model.ParentCorrelationId != Guid.Empty)
                    {
                        @Html.ActionLink(title, "Summary", "Request", new { correlationId = Model.ParentCorrelationId }, new { @class = "hoverlink" })
                        <a href="~/Request/DeepDive?id=@Model.ParentCorrelationId">
                            <span class="glyphicon glyphicon-eye-open" title="Eye of Sauron"></span>
                        </a>
                    }
                </td>
            </tr>
            <tr>
                <td class="columnheader">Resource</td>
                <td style="max-width: 200px; overflow: hidden; text-overflow: ellipsis;">
                    <div data-toggle="tooltip" title="@Model.Resource">
                        @if (string.IsNullOrEmpty(@Model.AdditionalInfo))
                        {
                            @Model.Resource
                        }
                        else
                        {
                            @Model.AdditionalInfo
                        }
                    </div>
                </td>
                <td class="columnheader">Request Type</td>
                <td>@Model.RequestType</td>
            </tr>
            <tr>
                <td class="columnheader">Priority</td>
                <td>@Model.Priority</td>
                <td class="columnheader">Is Async</td>
                <td>@Model.IsAsync</td>
            </tr>
            <tr>
                <td class="columnheader">Wall Clock Time</td>
                <td>@Model.WallClockTime</td>
                <td class="columnheader">Source System</td>
                <td>@Model.Client</td>
            </tr>
        </table>

        @if (!Model.IsBusy)
        {
            <br />
            <h3 class="text-lowercase">Result</h3>
            <table style="width: 100%; white-space: nowrap" class="datatable">
                <thead>
                    <tr>
                        <td style="width: 5%">Code</td>
                        <td style="width: 95%">Message</td>
                    </tr>
                </thead>
                <tr>
                    <td>@Model.ResultCode</td>
                    <td style="word-wrap: break-word">@Model.ResultMessage</td>
                </tr>
            </table>
            <br />
        }   

        <h3 class="text-lowercase">Actions</h3>
        @if (Model.IsBusy)
        {
            @Html.ActionLink("Cancel", "Cancel", "Request",
                new { correlationId = Model.CorrelationId },
                new { @class = "hoverlink", onclick = "return confirm('Are you sure you want to cancel this request?');" })
            <br />       
            @Html.ActionLink("Retry", "Retry", "Request",
                new { correlationId = Model.CorrelationId },
                new { @class = "hoverlink", onclick = "return confirm('Are you sure you want to retry this running request?');" })
            <br />
        }
        else
        {
            @Html.ActionLink("Rerun", "Rerun", "Request",
                new { correlationId = Model.CorrelationId },
                new { @class = "hoverlink", onclick = "return confirm('Are you sure you want to re-enqueue a copy of this request?');" })
            <br />
        }

        @if (Model.HasChildren)
        {
         

            <h3 class="text-lowercase">Child Requests</h3>

            <table style="width: 100%; white-space: nowrap" class="datatable">
                <thead>
                    <tr>
                        <!--TODO: Click through to child requests-->
                        <td>Controller</td>
                        <td>Requests</td>
                        <td>Successful</td>
                        <td>Items</td>
                        <td>Min Start</td>
                        <td>Max End</td>
                    </tr>
                </thead>
                @foreach (DetailRow row in Model.Items)
                {
                    var errorBackround = "";
                    if (row.Size == 0 || row.SuccessfulCount == 0 || row.CompletedCount > @row.SuccessfulCount)
                    {
                        errorBackround = "background-color: lightcoral";
                    }
                    <tr style="@errorBackround">
                        <td>@row.Controller</td>
                        <td>@row.RequestCount</td>
                        <td>
                            <a href="@Url.Action("Children", "Request", new { correlationId = Model.CorrelationId, filter = row.Controller })" class="hoverlink">
                                (@row.SuccessfulCount / @row.CompletedCount)
                            </a>
                        </td>
                        <td>@row.Size @row.SizeUnit</td>
                        <td>@row.MinStart</td>
                        <td>@row.MaxEnd</td>
                    </tr>
                }
            </table>
        }
        @if (Model.ErrorRows.Count > 0)
        {
            <h3 class="text-lowercase">Payload Errors</h3>
            <table style="width: 100%;" class="datatable">
                <thead>
                    <tr>
                        <td></td>
                        <td>Controller</td>
                        <td>Unit</td>
                        <td>Error</td>
                    </tr>
                </thead>
                @foreach (var error in Model.ErrorRows)
                {
                    <tr>
                        <td>  @Html.ActionLink(" ", "Summary", "Request", new { correlationId = error.CorrelationId, filter = error.Controller }, new { @class = "glyphicon glyphicon-share hoverlink", target = "_blank", title = "Open Link" })</td>
                        <td>@error.Controller</td>
                        <td>@error.ItemName</td>
                        <td>@error.ErrorName</td>
                    </tr>
                }
            </table>
        }
        <br />
    </div>
</div>
